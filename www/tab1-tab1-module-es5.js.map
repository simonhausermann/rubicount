{"version":3,"sources":["src/app/tab1/tab1.page.html","src/app/tab1/tab1.module.ts","src/app/tab1/tab1.page.scss","src/app/tab1/tab1.page.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-title>\\n      Rubicount\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\" (click)=\\\"clickTimer()\\\">\\n\\n  <ion-row>\\n    \\n    <ion-col >\\n      <div class=\\\"ion-text-center\\\"><ion-label class=\\\"timer\\\">{{currentTimeDisplay}}</ion-label></div>\\n      \\n    </ion-col>\\n  </ion-row>\\n  \\n  \\n    <div class=\\\"ion-text-center\\\">Best time: {{ bestTime }}</div>\\n   \\n  <ion-content class=\\\"funfact\\\">\\n    {{ funFact }}\\n</ion-content>\\n  \\n  \\n  <app-explore-container name=\\\"Timer\\\"></app-explore-container>\\n</ion-content>\\n\\n\\n\"","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab1Page } from './tab1.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: Tab1Page }])\n  ],\n  declarations: [Tab1Page]\n})\nexport class Tab1PageModule {\n\n  \n\n}\n","export default \"ion-content ion-toolbar {\\n  --background: translucent;\\n}\\n\\n@font-face {\\n  font-family: \\\"Roboto Mono\\\";\\n  src: url(\\\"/assets/fonts/RobotoMono-Regular.ttf\\\");\\n}\\n\\n.timer {\\n  font-family: \\\"Roboto Mono\\\";\\n  font-size: 3em !important;\\n  width: 100%;\\n  margin-top: 30px;\\n  margin-bottom: 15px;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zaW1vbi9pb25pYy9ydWJpY291bnQvc3JjL2FwcC90YWIxL3RhYjEucGFnZS5zY3NzIiwic3JjL2FwcC90YWIxL3RhYjEucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UseUJBQUE7QUNDRjs7QURFQTtFQUNFLDBCQUFBO0VBQ0EsZ0RBQUE7QUNDRjs7QURFQTtFQUNFLDBCQUFBO0VBQ0EseUJBQUE7RUFDQSxXQUFBO0VBQ0EsZ0JBQUE7RUFBa0IsbUJBQUE7RUFDbEIsa0JBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL3RhYjEvdGFiMS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpb24tY29udGVudCBpb24tdG9vbGJhciB7XG4gIC0tYmFja2dyb3VuZDogdHJhbnNsdWNlbnQ7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JvYm90byBNb25vJztcbiAgc3JjOiB1cmwoJy9hc3NldHMvZm9udHMvUm9ib3RvTW9uby1SZWd1bGFyLnR0ZicpO1xufVxuXG4udGltZXIge1xuICBmb250LWZhbWlseTogJ1JvYm90byBNb25vJztcbiAgZm9udC1zaXplOiAzZW0gIWltcG9ydGFudDtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi10b3A6IDMwcHg7IG1hcmdpbi1ib3R0b206IDE1cHg7IFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59IiwiaW9uLWNvbnRlbnQgaW9uLXRvb2xiYXIge1xuICAtLWJhY2tncm91bmQ6IHRyYW5zbHVjZW50O1xufVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6IFwiUm9ib3RvIE1vbm9cIjtcbiAgc3JjOiB1cmwoXCIvYXNzZXRzL2ZvbnRzL1JvYm90b01vbm8tUmVndWxhci50dGZcIik7XG59XG4udGltZXIge1xuICBmb250LWZhbWlseTogXCJSb2JvdG8gTW9ub1wiO1xuICBmb250LXNpemU6IDNlbSAhaW1wb3J0YW50O1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLXRvcDogMzBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufSJdfQ== */\"","import { Component } from '@angular/core';\nimport { isString, isNull } from 'util';\nimport { FormatTimeService } from '../services/format-time.service';\n\n\n@Component({\n  selector: 'app-tab1',\n  templateUrl: 'tab1.page.html',\n  styleUrls: ['tab1.page.scss']\n})\nexport class Tab1Page {\n\n  private logLevel = 0;\n\n  /* Local storage\n    actualUser: string\n    [username]: stringified userArray\n    changedTimes: boolean (string of '0': unchanged, '1': changed)\n  */\n  \n  // Start localStorage variables\n  private userObject: {\n    userName: string, \n    bestTime: string, \n    listTimes: Array<any>,\n    sound: boolean,\n    darkmode: boolean,\n    changedTimes: boolean\n  } = { \n      userName: 'User 1',\n      bestTime: '59:59.99',\n      listTimes: [],\n      sound: true,\n      darkmode: false,\n      changedTimes: true\n  };\n  private actualUser: string;\n  private userListAr: Array<string> = [];\n  // End localStorage Variables\n\n  public timesArray: Array<Object> = [];\n  public bestTime: any = '-';\n  public currentTimeDisplay: any = '00:00.00';\n\n  private startTime: any = false; // timer start\n  private overallTimerFunc: any = false; // running timer function\n  private elapsedTime: any; // ms after startTime\n\n  private sound: string;\n  private darkmode: string;\n\n  private funFacts: Array<string>;\n  public funFact: string = '';\n\n  constructor(private myFormat: FormatTimeService) {\n    this.funFacts = this.getFunfacts();\n  }\n\n  ionViewWillEnter() {\n    this.myLog('method ionViewWillEnter',1);\n    \n    this.actualUser = String(localStorage.getItem('actualUser'));\n    if (!this.actualUser || this.actualUser == '' || this.actualUser == 'null') { \n      this.myLog('no user found in storage, store defaul User 1: '+JSON.stringify(this.userObject),2);\n      this.myLog('this.userObject.userName:'+this.userObject.userName,2);\n      this.actualUser = this.userObject.userName;\n      this.userListAr.push(this.actualUser);\n    } else {\n      this.myLog('user found: '+this.actualUser,2);\n      this.userObject = JSON.parse(localStorage.getItem(this.actualUser));\n      this.userListAr = JSON.parse(localStorage.getItem('userListAr'));\n    }\n\n    this.myLog('set actual User in Storage: '+this.actualUser,2);\n    localStorage.setItem('actualUser',this.actualUser);\n    this.myLog('current userListAr: '+JSON.stringify(this.userListAr),2);\n    localStorage.setItem('userListAr',JSON.stringify(this.userListAr));\n    localStorage.setItem(this.actualUser,JSON.stringify(this.userObject));\n    this.myLog('userObject = '+JSON.stringify(this.userObject),2);\n\n    this.bestTime = this.userObject.bestTime;\n    \n  }\n\n  clickTimer() {\n    this.myLog('method clickTimer',1);\n    /*\n      if timer is not running, start timer. If timer is running, \n      stopp it an call function to process result.\n    */\n    if (!this.startTime) { // start new timer\n      this.startTime = new Date().getTime();\n      this.funFact = '';\n      \n      let countDownDate = new Date();\n\n      this.overallTimerFunc = setInterval(() => {\n        let now = new Date().getTime();\n\n        // Find the distance between now an the count down date\n        this.elapsedTime = now - this.startTime;\n\n        // Time calculations for hours, minutes and seconds\n        \n        this.currentTimeDisplay = this.myFormat.formateTime(this.elapsedTime);\n\n      },10)\n\n    }\n    else { // stop timer\n      clearInterval(this.overallTimerFunc);\n      this.finishTry();\n      this.startTime = false;\n      this.funFact = this.funFacts[Math.floor(Math.random() * this.funFacts.length)];\n    }\n  }\n\n  private finishTry() {\n    this.myLog('method finishTry',1);\n    /* \n      1. Zeit in Array speichern\n      2. Zeitentabelle aktualisieren\n      3. Bestzeit aktualisieren\n    */\n    \n    this.addTimeToResults();\n    this.refreshBestTime();\n    this.storeAllValues();\n  }\n\n  private addTimeToResults() {\n    this.myLog('method addTimeToResults',1);\n    this.userObject.listTimes.push({\n      timeStamp: this.startTime + this.elapsedTime,\n      tryTime: this.elapsedTime\n    });\n    this.myLog('user.listTimes after: '+JSON.stringify(this.userObject.listTimes),2);\n  }\n\n  private refreshBestTime() {\n    this.myLog('refreshBestTime',1);\n    \n    if (this.userObject.bestTime == '00:00,00' || this.myFormat.formateTime(this.elapsedTime) < this.userObject.bestTime) {\n      console.log('faster');\n      this.bestTime = this.myFormat.formateTime(this.elapsedTime);\n    } else {\n      console.log('slower');\n    }\n    \n    this.userObject.bestTime = this.bestTime;\n  }\n\n  private storeAllValues() {\n    this.myLog('method storeAllValues: ',1);\n    this.userObject.changedTimes = true;\n    localStorage.setItem(this.actualUser,JSON.stringify(this.userObject));\n  }\n\n  private myLog(consoleText: string, level: number) {\n    if (this.logLevel >= level) {\n      console.log('timer: '+consoleText);\n    }\n    return;\n  }\n  \n  private getFunfacts() {\n    return [\n      \"God's Number shows the smallest number of moves needed to solve the 3x3x3 Rubik's Cube from any random starting position. Since July of 2010 we know that this number is 20, so every position can be solved in twenty moves or less.\",\n      \"It's estimated that less than 5.8% of the world's population can solve the Rubik's Cube. Statistics show that 1 in 20 people who own a Rubik's Cube can solve a Rubik's Cube.\",\n      \"In 1974, a young professor of architecture in Budapest created the apparently impossible object.\",\n      \"The first Magic Cube (as it was originally known) was sold in a Budapest toy shop in 1975.\",\n      \"The puzzle is made up of twenty-six miniature cubes, known as 'cubies' or 'cubelets'\",\n      \"The Magic Cube was renamed Rubik's Cube in 1980.\",\n      \"The Rubik's Cube won Toy of the Year in 1980 and 1981.\",\n      \"Over 350 million Rubik’s Cubes have been sold worldwide – making it the bestselling toy of all time.\",\n      \"A Rubik's Cube has 43,252,003,274,489,856,000 possible configurations.\",\n      \"With six coloured sides, 21 pieces and 54 outer surfaces, there's a combined total of over 43 QUINTILLIOIN different possible configurations.\",\n      \"If you turned Rubik's Cube once every second it would take you 1400 TRILLION YEARS to finish to go through all the configurations.\",\n      \"The best speed cubers* can solve the cube in under six seconds.\",\n      \"The current world record holder is Mats Valk from the Netherlands. Who completed the puzzle in 5.55 seconds.\",\n      \"Some speed-cubers go for style points over raw speed.\",\n      \"A <a href='https://youtu.be/tSqUcrFJ498'>three-year-old in China</a> solved the puzzle in under two minutes.\",\n      \"Legos & smartphone <a href='https://www.reddit.com/r/gifs/comments/lgy6c/legos_smartphone_solve_rubiks_cube_faster_than/'>solve Rubik's cube</a> faster than human record\"\n    ]\n  }\n\n}\n\n"],"sourceRoot":"webpack:///","file":"tab1-tab1-module-es5.js"}